version: '3.6'

services:
  controller:
    build:
      context: .
      dockerfile: Controller.dockerfile
    ports:
      - "5001:5001"
    restart: always
    command: "python main.py"
    working_dir: /usr/src/app
    volumes:
      - ./Software/Controller:/usr/src/app
    networks:
      - app-network
      
  gateway:
    build:
      context: .
      dockerfile: Gateway.dockerfile
    ports:
      - "3000:3000"
    restart: always
    command: "npm run start-production"
    working_dir: /usr/src/app
    environment:
      - CONTROLLER_ADDR=http://controller:5001/graphql
    volumes:
      - ./Software/Gateway:/usr/src/app
    networks:
      - app-network

      frontend:
    image: node:14
    restart: always
    command: ['yarn', 'run', 'start']
    env_file:
      - ./envs/development.env
    working_dir: /usr/app/src
    volumes:
      - ./Software/Frontend:/usr/app/src
    ports:
      - '9025:9025'
    stdin_open: true

  postgres:
    image: postgres:12
    restart: always
    networks:
      - app-network
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  hasura:
    image: hasura/graphql-engine:v1.3.3
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    networks:
      - app-network
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    
networks:
  app-network:
    driver: bridge

volumes:
  db_data:      
